{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/city-search/city-search.component.html","./src/app/current-weather/current-weather.component.html","./src/app/actions/search.actions.ts","./src/app/app-material.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/city-search/city-search.component.css","./src/app/city-search/city-search.component.ts","./src/app/current-weather/current-weather.component.css","./src/app/current-weather/current-weather.component.ts","./src/app/effects/current-weather.effects.ts","./src/app/postal-code/postal-code.service.ts","./src/app/reducers/index.ts","./src/app/reducers/search.reducer.ts","./src/app/weather/weather.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAe,0qBAA2mB,gBAAgB,gOAAgO,iBAAiB,aAAa,gEAAgE,8CAA8C,E;;;;;;;;;;;;ACAt/B;AAAe,+LAAgI,gBAAgB,WAAW,mBAAmB,uEAAuE,uCAAuC,4BAA4B,6GAA6G,6DAA6D,qBAAqB,2KAA2K,yCAAyC,gDAAgD,qGAAqG,uBAAuB,iBAAiB,E;;;;;;;;;;;;ACAv5B;AAAA;AAAA;AAAwD;AAIjD,MAAM,aAAa,GAAG;IAC3B,MAAM,EAAE,gEAAY,CAClB,iBAAiB,EACjB,yDAAK,EAA4C,CAClD;IACD,aAAa,EAAE,gEAAY,CACzB,gCAAgC,EAChC,yDAAK,EAAgC,CACtC;CACF;AAED,MAAM,GAAG,GAAG,yDAAK,CAAC,aAAa,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACfQ;AACkB;AACJ;AACW;AACX;AACE;AACa;AACT;AAE5D,MAAM,OAAO,GAAG;IACd,wEAAe;IACf,0EAAgB;IAChB,oEAAa;IACb,oEAAa;IACb,+EAAkB;IAClB,sEAAc;IACd,mFAAoB;CACrB;AAKD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;AAApB,iBAAiB;IAH7B,8DAAQ,CAAC;QACR,OAAO,EAAE,OAAO;KACjB,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;ACtBW;AAuBzC,IAAa,YAAY,GAAzB,MAAa,YAAY;CAAG;AAAf,YAAY;IArBxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE;;;;;;;;;;;;;;;;;GAiBT;KACF,CAAC;GACW,YAAY,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvB8B;AACf;AACe;AACU;AACR;AACqB;AACjC;AACJ;AACiB;AAED;AACA;AACX;AAC2B;AACY;AACZ;AACtB;AAsBnD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;AAAZ,SAAS;IApBrB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,4DAAY,EAAE,mGAAuB,EAAE,uFAAmB,CAAC;QAC1E,OAAO,EAAE;YACP,uEAAa;YACb,qEAAgB;YAChB,uEAAiB;YACjB,qEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,4FAAuB;YACvB,uDAAW,CAAC,OAAO,CAAC,mDAAQ,EAAE;gBAC5B,qEAAY;gBACZ,aAAa,EAAE,EAAE,uBAAuB,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE;aACjF,CAAC;YACF,2DAAa,CAAC,OAAO,CAAC,CAAC,uFAAqB,CAAC,CAAC;YAC9C,wEAAmB,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,sEAAW,CAAC,UAAU,EAAE,CAAC;SAChF;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;ACtCtB;AAAe,qFAAsB,iBAAiB,GAAG,sBAAsB,iBAAiB,GAAG,mBAAmB,0BAA0B,gBAAgB,gBAAgB,GAAG,aAAa,uBAAuB,GAAG,+CAA+C,upBAAupB,E;;;;;;;;;;;;;;;;;;;;;;ACAv3B;AACe;AACrB;AACuB;AAED;AAEE;AAO3D,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAI9B,YACU,cAA8B,EAC9B,KAA8B;QAD9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAyB;QALxC,YAAO,GAAG,KAAK;QACf,WAAM,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QAM1E,IAAI,CAAC,MAAM,CAAC,YAAY;aACrB,IAAI,CACH,mEAAY,CAAC,IAAI,CAAC,EAClB,6DAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAClC,0DAAG,CAAC,CAAC,WAAmB,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CACzD;aACA,SAAS,EAAE;IAChB,CAAC;IAED,QAAQ,CAAC,WAAmB;QAC1B,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7D,MAAM,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;QAC/B,MAAM,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;QAE/D,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,OAAO,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,0BAA0B,CAAC,UAAU,EAAE,OAAO,CAAC;SACrD;IACH,CAAC;IAED,0BAA0B,CAAC,UAAkB,EAAE,OAAgB;QAC7D,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,UAAU,EAAE,OAAO,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAkB,EAAE,OAAgB;QAClD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,qEAAa,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC;IACpE,CAAC;CACF;;YA/B2B,uEAAc;YACvB,iDAAK;;AANX,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,6OAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAoC/B;AApC+B;;;;;;;;;;;;;ACdhC;AAAe,wEAAS,sBAAsB,GAAG,gBAAgB,qBAAqB,GAAG,WAAW,0BAA0B,GAAG,+CAA+C,mgBAAmgB,E;;;;;;;;;;;;;;;;;;;;;ACA1oB;AACE;AACH;AAGD;AACoB;AAO3D,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAGlC,YACU,cAA8B,EAC9B,KAA4B;QAD5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAuB;QAEpC,IAAI,CAAC,QAAQ,GAAG,kDAAK,CACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,8DAA6B,CAAC,CAAC,EACtD,IAAI,CAAC,cAAc,CAAC,eAAe,CACpC;IACH,CAAC;IAED,2DAA2D;IAC3D,UAAU,CAAC,IAAY;QACrB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;QAClC,OAAO,CAAC,GAAG,CAAC;YACV,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACxE,CAAC,CAAC,EAAE;IACR,CAAC;CACF;;YAhB2B,uEAAc;YACvB,iDAAK;;AALX,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,yPAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAoBnC;AApBmC;;;;;;;;;;;;;;;;;;;;;;;ACbM;AACmB;AACjC;AACgC;AAEH;AACE;AAG3D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAChC,YAAoB,QAAiB,EAAU,cAA8B;QAAzD,aAAQ,GAAR,QAAQ,CAAS;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAE7E,uBAAkB,GAAG,kEAAY,CAAC,GAAG,EAAE,CACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,4DAAM,CAAC,qEAAa,CAAC,MAAM,CAAC,EAC5B,iEAAU,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAC9C,CACF;IAP+E,CAAC;IASzE,QAAQ,CAAC,MAAgD;QAC/D,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAClF,0DAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,qEAAa,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,EACnE,iEAAU,CAAC,GAAG,EAAE,CAAC,0CAAK,CAAC,CACxB;IACH,CAAC;CACF;;YAf+B,qDAAO;YAA0B,uEAAc;;AADlE,qBAAqB;IADjC,gEAAU,EAAE;GACA,qBAAqB,CAgBjC;AAhBiC;;;;;;;;;;;;;;;;;;;;;ACT2B;AACnB;AAEc;AAEI;AAqB5D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC5B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,iBAAiB,CAAC,UAAkB;QAClC,MAAM,SAAS,GAAG,IAAI,+DAAU,EAAE;aAC/B,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC;aACnB,GAAG,CAAC,UAAU,EAAE,qEAAW,CAAC,QAAQ,CAAC;aACrC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC;QAEhC,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CACF,GAAG,qEAAW,CAAC,OAAO,GAAG,qEAAW,CAAC,WAAW,oCAAoC,EACpF,EAAE,MAAM,EAAE,SAAS,EAAE,CACtB;aACA,IAAI,CACH,8DAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EACnC,qEAAc,CAAC,IAAI,CAAC,CACrB;IACL,CAAC;CACF;;YAlBiC,+DAAU;;AAD/B,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAmB7B;AAnB6B;;;;;;;;;;;;;AC1B9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0F;AAE9B;AACd;AAMvC,MAAM,QAAQ,GAA4B;IAC/C,MAAM,EAAE,uDAAkB;CAC3B;AAEM,MAAM,oBAAoB,GAAG,kEAAc,CAChD,CAAC,KAAY,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EACtC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CACrB;AAEM,SAAS,MAAM,CAAC,OAA6B;IAClD,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;QACvB,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;QACrC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC;QACjC,OAAO,CAAC,QAAQ,EAAE;QAElB,OAAO,MAAM;IACf,CAAC;AACH,CAAC;AAEM,MAAM,YAAY,GAAyB,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;;;;;;;;;;;;;AC/BzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEE;AAEE;AAMpD,MAAM,YAAY,GAAU;IACjC,OAAO,EAAE,uEAAc;CACxB;AAED,MAAM,aAAa,GAAG,iEAAa,CACjC,YAAY,EACZ,sDAAE,CAAC,qEAAa,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IAChD,uCACK,KAAK,KACR,OAAO,EAAE,MAAM,CAAC,OAAO,IACxB;AACH,CAAC,CAAC,CACH;AAEM,SAAS,OAAO,CAAC,KAAwB,EAAE,MAAc;IAC9D,OAAO,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC;AACrC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC1B4D;AACnB;AACQ;AACH;AAEa;AAEU;AAmB/D,MAAM,cAAc,GAAoB;IAC7C,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,IAAI;IACb,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE;IAChB,KAAK,EAAE,EAAE;IACT,WAAW,EAAE,CAAC;IACd,WAAW,EAAE,EAAE;CAChB;AAYD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAGzB,YACU,UAAsB,EACtB,iBAAoC;QADpC,eAAU,GAAV,UAAU,CAAY;QACtB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAJrC,oBAAe,GAAG,IAAI,oDAAe,CAAkB,cAAc,CAAC;IAK5E,CAAC;IAEJ,yBAAyB,CAAC,MAGzB;QACC,MAAM,SAAS,GAAG,IAAI,+DAAU,EAAE;aAC/B,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;aACtC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAE1C,OAAO,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC;IAChD,CAAC;IAED,oBAAoB,CAAC,UAAkB,EAAE,OAAgB;QACvD,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE,CAChE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CACnC;IACH,CAAC;IAED,iBAAiB,CAAC,UAAkB,EAAE,OAAgB;QACpD,OAAO,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,IAAI,CAC9D,gEAAS,CAAC,CAAC,UAAU,EAAE,EAAE;YACvB,IAAI,UAAU,EAAE;gBACd,OAAO,IAAI,CAAC,yBAAyB,CAAC;oBACpC,QAAQ,EAAE,UAAU,CAAC,GAAG;oBACxB,SAAS,EAAE,UAAU,CAAC,GAAG;iBAC1B,CAAC;aACH;iBAAM;gBACL,MAAM,SAAS,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CACpC,GAAG,EACH,OAAO,CAAC,CAAC,CAAC,GAAG,UAAU,IAAI,OAAO,EAAE,CAAC,CAAC,CAAC,UAAU,CAClD;gBAED,OAAO,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC;aAC/C;QACH,CAAC,CAAC,CACH;IACH,CAAC;IAEO,uBAAuB,CAAC,SAAqB;QACnD,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,qEAAW,CAAC,KAAK,CAAC;QAErD,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CACF,GAAG,qEAAW,CAAC,OAAO,yCAAyC,EAC/D,EAAE,MAAM,EAAE,SAAS,EAAE,CACtB;aACA,IAAI,CAAC,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEO,0BAA0B,CAAC,IAAyB;QAC1D,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO;YACzB,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI;YACpB,KAAK,EAAE,GAAG,qEAAW,CAAC,OAAO,4BAA4B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM;YACnF,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAClD,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW;SACzC;IACH,CAAC;IAEO,gBAAgB,CAAC,MAAc;QACrC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM;IAC1B,CAAC;CACF;;YAlEuB,+DAAU;YACH,kFAAiB;;AALnC,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAsE1B;AAtE0B;;;;;;;;;;;;;AC7C3B;AAAA;AAAO,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,KAAK,EAAE,kCAAkC;IACzC,QAAQ,EAAE,UAAU;IACpB,OAAO,EAAE,SAAS;IAClB,WAAW,EAAE,KAAK;CACnB;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA8C;AAC4B;AAE9B;AACY;AAExD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE;CACjB;AAED,gGAAsB,EAAE;KACrB,eAAe,CAAC,yDAAS,CAAC;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div fxLayout=\\\"column\\\" style=\\\"margin-bottom: 32px\\\">\\n  <form #searchForm>\\n    <mat-form-field appearance=\\\"outline\\\"\\n      [ngClass]=\\\"search.value ? 'search-box-partial' : 'search-box-full'\\\">\\n      <mat-label>Город иди почтовый индекс</mat-label>\\n      <mat-icon matPrefix>search</mat-icon>\\n      <input matInput aria-label=\\\"City or Zip\\\" [formControl]=\\\"search\\\" />\\n      <mat-error *ngIf=\\\"search.invalid\\\"> Введите больше одного символа для поиска\\n      </mat-error>\\n    </mat-form-field>\\n    <button mat-icon-button *ngIf=\\\"search.value\\\" class=\\\"clear-button\\\"\\n      (click)=\\\"searchForm.reset(); search.reset();\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </form>\\n  <div class=\\\"center\\\">\\n    <mat-slide-toggle color=\\\"accent\\\" [(ngModel)]=\\\"useNgRx\\\"\\n      (ngModelChange)=\\\"doSearch(search.value)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      {{useNgRx ? 'Использовать NgRX' : 'Использовать BehaviorSubject'}}\\n    </mat-slide-toggle>\\n  </div>\\n</div>\\n\";","export default \"<div *ngIf=\\\"current$ | async as current\\\">\\n  <div fxLayout=\\\"row\\\">\\n    <div fxFlex=\\\"66%\\\" class=\\\"mat-title no-margin\\\">{{ current.city }},\\n      {{ current.country }}</div>\\n    <div fxFlex class=\\\"mat-subheading-2 no-margin\\\">\\n      {{ current.date | date: 'EEEE MMM d' }}{{ getOrdinal(current.date) }}\\n    </div>\\n  </div>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"margin-bottom: -48px;\\\">\\n    <div fxFlex=\\\"55%\\\">\\n      <img style=\\\"zoom: 175%; margin-bottom: 32px;\\\" [src]=\\\"current.image\\\"\\n        [alt]=\\\"current.description\\\" />\\n    </div>\\n    <div fxFlex class=\\\"right no-margin\\\">\\n      <p class=\\\"mat-display-3\\\">\\n        {{ current.temperature | number: '1.0-0' }}\\n        <span class=\\\"mat-display-1 unit\\\">°С;</span>\\n      </p>\\n    </div>\\n  </div>\\n  <div fxLayoutAlign=\\\"center \\\" class=\\\"mat-caption \\\">{{ current.description }}</div>\\n</div>\\n\";","import { createAction, props, union } from '@ngrx/store'\n\nimport { ICurrentWeather } from '../interfaces'\n\nexport const SearchActions = {\n  search: createAction(\n    '[Search] Search',\n    props<{ searchText: string; country?: string }>()\n  ),\n  weatherLoaded: createAction(\n    '[Search] CurrentWeather loaded',\n    props<{ current: ICurrentWeather }>()\n  ),\n}\n\nconst all = union(SearchActions)\nexport type SearchActions = typeof all\n","import { NgModule } from '@angular/core'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\nimport { MatToolbarModule } from '@angular/material/toolbar'\n\nconst modules = [\n  MatButtonModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSlideToggleModule,\n]\n\n@NgModule({\n  exports: modules,\n})\nexport class AppMaterialModule {}\n","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <mat-toolbar color=\"primary\"> <span>Angular Forecast</span> </mat-toolbar>\n    <br />\n  \n    <div fxLayoutAlign=\"center\">\n      <app-city-search></app-city-search>\n    </div>\n    <div fxLayout=\"row\">\n      <div fxFlex></div>\n      <mat-card fxFlex=\"300px\">\n        <mat-card-header>\n          <mat-card-title><div class=\"mat-headline\">Текущая погода</div></mat-card-title>\n        </mat-card-header>\n        <mat-card-content> <app-current-weather></app-current-weather> </mat-card-content>\n      </mat-card>\n      <div fxFlex></div>\n    </div>\n  `,\n})\nexport class AppComponent {}\n","import { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from '@ngrx/store'\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\n\nimport { environment } from '../environments/environment'\nimport { AppMaterialModule } from './app-material.module'\nimport { AppComponent } from './app.component'\nimport { CitySearchComponent } from './city-search/city-search.component'\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component'\nimport { CurrentWeatherEffects } from './effects/current-weather.effects'\nimport { metaReducers, reducers } from './reducers'\n\n@NgModule({\n  declarations: [AppComponent, CurrentWeatherComponent, CitySearchComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: { strictStateImmutability: true, strictActionImmutability: true },\n    }),\n    EffectsModule.forRoot([CurrentWeatherEffects]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export default \".search-box-partial {\\n  width: 260px;\\n}\\n\\n.search-box-full {\\n  width: 300px;\\n}\\n\\n.clear-button {\\n  display: inline-block;\\n  width: 40px;\\n  color: gray;\\n}\\n\\n.center {\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2l0eS1zZWFyY2gvY2l0eS1zZWFyY2guY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY2l0eS1zZWFyY2gvY2l0eS1zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWFyY2gtYm94LXBhcnRpYWwge1xuICB3aWR0aDogMjYwcHg7XG59XG5cbi5zZWFyY2gtYm94LWZ1bGwge1xuICB3aWR0aDogMzAwcHg7XG59XG5cbi5jbGVhci1idXR0b24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiA0MHB4O1xuICBjb2xvcjogZ3JheTtcbn1cblxuLmNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdfQ== */\";","import { Component } from '@angular/core'\nimport { FormControl, Validators } from '@angular/forms'\nimport { Store } from '@ngrx/store'\nimport { debounceTime, filter, tap } from 'rxjs/operators'\n\nimport { SearchActions } from '../actions/search.actions'\nimport * as fromSearch from '../reducers/search.reducer'\nimport { WeatherService } from '../weather/weather.service'\n\n@Component({\n  selector: 'app-city-search',\n  templateUrl: './city-search.component.html',\n  styleUrls: ['./city-search.component.css'],\n})\nexport class CitySearchComponent {\n  useNgRx = false\n  search = new FormControl('', [Validators.required, Validators.minLength(2)])\n\n  constructor(\n    private weatherService: WeatherService,\n    private store: Store<fromSearch.State>\n  ) {\n    this.search.valueChanges\n      .pipe(\n        debounceTime(1000),\n        filter(() => !this.search.invalid),\n        tap((searchValue: string) => this.doSearch(searchValue))\n      )\n      .subscribe()\n  }\n\n  doSearch(searchValue: string) {\n    const userInput = searchValue.split(',').map((s) => s.trim())\n    const searchText = userInput[0]\n    const country = userInput.length > 1 ? userInput[1] : undefined\n\n    if (this.useNgRx) {\n      this.ngRxBasedSearch(searchText, country)\n    } else {\n      this.behaviorSubjectBasedSearch(searchText, country)\n    }\n  }\n\n  behaviorSubjectBasedSearch(searchText: string, country?: string) {\n    this.weatherService.updateCurrentWeather(searchText, country)\n  }\n\n  ngRxBasedSearch(searchText: string, country?: string) {\n    this.store.dispatch(SearchActions.search({ searchText, country }))\n  }\n}\n","export default \".right {\\n  text-align: right;\\n}\\n\\n.no-margin {\\n  margin-bottom: 0;\\n}\\n\\n.unit {\\n  vertical-align: super;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VycmVudC13ZWF0aGVyL2N1cnJlbnQtd2VhdGhlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY3VycmVudC13ZWF0aGVyL2N1cnJlbnQtd2VhdGhlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5uby1tYXJnaW4ge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4udW5pdCB7XG4gIHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcbn1cbiJdfQ== */\";","import { Component } from '@angular/core'\nimport { Store, select } from '@ngrx/store'\nimport { Observable, merge } from 'rxjs'\n\nimport { ICurrentWeather } from '../interfaces'\nimport * as appStore from '../reducers'\nimport { WeatherService } from '../weather/weather.service'\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.css'],\n})\nexport class CurrentWeatherComponent {\n  current$: Observable<ICurrentWeather>\n\n  constructor(\n    private weatherService: WeatherService,\n    private store: Store<appStore.State>\n  ) {\n    this.current$ = merge(\n      this.store.pipe(select(appStore.selectCurrentWeather)),\n      this.weatherService.currentWeather$\n    )\n  }\n\n  // Attribution: https://stackoverflow.com/a/44418732/178620\n  getOrdinal(date: number) {\n    const n = new Date(date).getDate()\n    return n > 0\n      ? ['th', 'st', 'nd', 'rd'][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10]\n      : ''\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { EMPTY } from 'rxjs'\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\n\nimport { SearchActions } from '../actions/search.actions'\nimport { WeatherService } from '../weather/weather.service'\n\n@Injectable()\nexport class CurrentWeatherEffects {\n  constructor(private actions$: Actions, private weatherService: WeatherService) {}\n\n  getCurrentWeather$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SearchActions.search),\n      exhaustMap((action) => this.doSearch(action))\n    )\n  )\n\n  private doSearch(action: { searchText: string; country?: string }) {\n    return this.weatherService.getCurrentWeather(action.searchText, action.country).pipe(\n      map((weather) => SearchActions.weatherLoaded({ current: weather })),\n      catchError(() => EMPTY)\n    )\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { defaultIfEmpty, flatMap } from 'rxjs/operators'\n\nimport { environment } from '../../environments/environment'\n\nexport interface IPostalCode {\n  countryCode: string\n  postalCode: string\n  placeName: string\n  lng: number\n  lat: number\n}\n\nexport interface IPostalCodeData {\n  postalCodes: [IPostalCode]\n}\n\nexport interface IPostalCodeService {\n  resolvePostalCode(postalCode: string): Observable<IPostalCode>\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostalCodeService implements IPostalCodeService {\n  constructor(private httpClient: HttpClient) {}\n\n  resolvePostalCode(postalCode: string): Observable<IPostalCode> {\n    const uriParams = new HttpParams()\n      .set('maxRows', '1')\n      .set('username', environment.username)\n      .set('postalcode', postalCode)\n\n    return this.httpClient\n      .get<IPostalCodeData>(\n        `${environment.baseUrl}${environment.geonamesApi}.geonames.org/postalCodeSearchJSON`,\n        { params: uriParams }\n      )\n      .pipe(\n        flatMap((data) => data.postalCodes),\n        defaultIfEmpty(null)\n      )\n  }\n}\n","import { ActionReducer, ActionReducerMap, MetaReducer, createSelector } from '@ngrx/store'\n\nimport { environment } from '../../environments/environment'\nimport * as fromSearch from './search.reducer'\n\nexport interface State {\n  search: fromSearch.State\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  search: fromSearch.reducer,\n}\n\nexport const selectCurrentWeather = createSelector(\n  (state: State) => state.search.current,\n  (current) => current\n)\n\nexport function logger(reducer: ActionReducer<State>): ActionReducer<State> {\n  return (state, action) => {\n    const result = reducer(state, action)\n    console.groupCollapsed(action.type)\n    console.log('prev state', state)\n    console.log('action', action)\n    console.log('next state', result)\n    console.groupEnd()\n\n    return result\n  }\n}\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [logger] : []\n","import { Action, createReducer, on } from '@ngrx/store'\n\nimport { SearchActions } from '../actions/search.actions'\nimport { ICurrentWeather } from '../interfaces'\nimport { defaultWeather } from '../weather/weather.service'\n\nexport interface State {\n  current: ICurrentWeather\n}\n\nexport const initialState: State = {\n  current: defaultWeather,\n}\n\nconst searchReducer = createReducer(\n  initialState,\n  on(SearchActions.weatherLoaded, (state, action) => {\n    return {\n      ...state,\n      current: action.current,\n    }\n  })\n)\n\nexport function reducer(state: State | undefined, action: Action) {\n  return searchReducer(state, action)\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { BehaviorSubject, Observable } from 'rxjs'\nimport { map, switchMap } from 'rxjs/operators'\n\nimport { environment } from '../../environments/environment'\nimport { ICurrentWeather } from '../interfaces'\nimport { PostalCodeService } from '../postal-code/postal-code.service'\n\nexport interface ICurrentWeatherData {\n  weather: [\n    {\n      description: string\n      icon: string\n    }\n  ]\n  main: {\n    temp: number\n  }\n  sys: {\n    country: string\n  }\n  dt: number\n  name: string\n}\n\nexport const defaultWeather: ICurrentWeather = {\n  city: '--',\n  country: '--',\n  date: Date.now(),\n  image: '',\n  temperature: 0,\n  description: '',\n}\n\nexport interface IWeatherService {\n  readonly currentWeather$: BehaviorSubject<ICurrentWeather>\n  getCurrentWeather(city: string, country?: string): Observable<ICurrentWeather>\n  getCurrentWeatherByCoords(coords: Coordinates): Observable<ICurrentWeather>\n  updateCurrentWeather(searchText: string, country?: string): void\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService implements IWeatherService {\n  readonly currentWeather$ = new BehaviorSubject<ICurrentWeather>(defaultWeather)\n\n  constructor(\n    private httpClient: HttpClient,\n    private postalCodeService: PostalCodeService\n  ) {}\n\n  getCurrentWeatherByCoords(coords: {\n    latitude: number\n    longitude: number\n  }): Observable<ICurrentWeather> {\n    const uriParams = new HttpParams()\n      .set('lat', coords.latitude.toString())\n      .set('lon', coords.longitude.toString())\n\n    return this.getCurrentWeatherHelper(uriParams)\n  }\n\n  updateCurrentWeather(searchText: string, country?: string): void {\n    this.getCurrentWeather(searchText, country).subscribe((weather) =>\n      this.currentWeather$.next(weather)\n    )\n  }\n\n  getCurrentWeather(searchText: string, country?: string): Observable<ICurrentWeather> {\n    return this.postalCodeService.resolvePostalCode(searchText).pipe(\n      switchMap((postalCode) => {\n        if (postalCode) {\n          return this.getCurrentWeatherByCoords({\n            latitude: postalCode.lat,\n            longitude: postalCode.lng,\n          })\n        } else {\n          const uriParams = new HttpParams().set(\n            'q',\n            country ? `${searchText},${country}` : searchText\n          )\n\n          return this.getCurrentWeatherHelper(uriParams)\n        }\n      })\n    )\n  }\n\n  private getCurrentWeatherHelper(uriParams: HttpParams): Observable<ICurrentWeather> {\n    uriParams = uriParams.set('appid', environment.appId)\n\n    return this.httpClient\n      .get<ICurrentWeatherData>(\n        `${environment.baseUrl}api.openweathermap.org/data/2.5/weather`,\n        { params: uriParams }\n      )\n      .pipe(map((data) => this.transformToICurrentWeather(data)))\n  }\n\n  private transformToICurrentWeather(data: ICurrentWeatherData): ICurrentWeather {\n    return {\n      city: data.name,\n      country: data.sys.country,\n      date: data.dt * 1000,\n      image: `${environment.baseUrl}openweathermap.org/img/w/${data.weather[0].icon}.png`,\n      temperature: this.convertKelvinToС(data.main.temp),\n      description: data.weather[0].description,\n    }\n  }\n\n  private convertKelvinToС(kelvin: number): number {\n    return (kelvin) - 273.15\n  }\n}\n","export const environment = {\n  production: false,\n  appId: '01ff1417eeb4a81b09ac68b15958d453',\n  username: 'forecast',\n  baseUrl: 'http://',\n  geonamesApi: 'api',\n}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err))\n"],"sourceRoot":"webpack:///"}