{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/city-search/city-search.component.html","webpack:///src/app/current-weather/current-weather.component.html","webpack:///src/app/actions/search.actions.ts","webpack:///src/app/app-material.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/city-search/city-search.component.css","webpack:///src/app/city-search/city-search.component.ts","webpack:///src/app/current-weather/current-weather.component.css","webpack:///src/app/current-weather/current-weather.component.ts","webpack:///src/app/effects/current-weather.effects.ts","webpack:///src/app/postal-code/postal-code.service.ts","webpack:///src/app/reducers/index.ts","webpack:///src/app/reducers/search.reducer.ts","webpack:///src/app/weather/weather.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","SearchActions","search","weatherLoaded","all","modules","AppMaterialModule","AppComponent","selector","template","AppModule","declarations","imports","forRoot","metaReducers","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","logOnly","production","providers","bootstrap","CitySearchComponent","weatherService","store","useNgRx","required","minLength","valueChanges","pipe","invalid","searchValue","doSearch","subscribe","userInput","split","map","s","trim","searchText","country","length","undefined","ngRxBasedSearch","behaviorSubjectBasedSearch","updateCurrentWeather","dispatch","CurrentWeatherComponent","current$","currentWeather$","date","n","Date","getDate","CurrentWeatherEffects","actions$","getCurrentWeather$","action","getCurrentWeather","weather","current","PostalCodeService","httpClient","postalCode","uriParams","set","username","get","baseUrl","geonamesApi","params","data","postalCodes","providedIn","reducers","selectCurrentWeather","state","logger","reducer","result","console","groupCollapsed","type","log","groupEnd","initialState","searchReducer","defaultWeather","city","now","image","temperature","description","WeatherService","postalCodeService","coords","latitude","toString","longitude","getCurrentWeatherHelper","next","resolvePostalCode","getCurrentWeatherByCoords","lat","lng","appId","transformToICurrentWeather","name","sys","dt","icon","convertKelvinTo–°","main","temp","kelvin","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div fxLayout=\\\"column\\\" style=\\\"margin-bottom: 32px\\\">\\n  <form #searchForm>\\n    <mat-form-field appearance=\\\"outline\\\"\\n      [ngClass]=\\\"search.value ? 'search-box-partial' : 'search-box-full'\\\">\\n      <mat-label>–ì–æ—Ä–æ–¥ –∏–¥–∏ –ø–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å</mat-label>\\n      <mat-icon matPrefix>search</mat-icon>\\n      <input matInput aria-label=\\\"City or Zip\\\" [formControl]=\\\"search\\\" />\\n      <mat-error *ngIf=\\\"search.invalid\\\"> –í–≤–µ–¥–∏—Ç–µ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞\\n      </mat-error>\\n    </mat-form-field>\\n    <button mat-icon-button *ngIf=\\\"search.value\\\" class=\\\"clear-button\\\"\\n      (click)=\\\"searchForm.reset(); search.reset();\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </form>\\n  <div class=\\\"center\\\">\\n    <mat-slide-toggle color=\\\"accent\\\" [(ngModel)]=\\\"useNgRx\\\"\\n      (ngModelChange)=\\\"doSearch(search.value)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      {{useNgRx ? '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å NgRX' : '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å BehaviorSubject'}}\\n    </mat-slide-toggle>\\n  </div>\\n</div>\\n\";","export default \"<div *ngIf=\\\"current$ | async as current\\\">\\n  <div fxLayout=\\\"row\\\">\\n    <div fxFlex=\\\"66%\\\" class=\\\"mat-title no-margin\\\">{{ current.city }},\\n      {{ current.country }}</div>\\n    <div fxFlex class=\\\"mat-subheading-2 no-margin\\\">\\n      {{ current.date | date: 'EEEE MMM d' }}{{ getOrdinal(current.date) }}\\n    </div>\\n  </div>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"margin-bottom: -48px;\\\">\\n    <div fxFlex=\\\"55%\\\">\\n      <img style=\\\"zoom: 175%; margin-bottom: 32px;\\\" [src]=\\\"current.image\\\"\\n        [alt]=\\\"current.description\\\" />\\n    </div>\\n    <div fxFlex class=\\\"right no-margin\\\">\\n      <p class=\\\"mat-display-3\\\">\\n        {{ current.temperature | number: '1.0-0' }}\\n        <span class=\\\"mat-display-1 unit\\\">¬∞–°;</span>\\n      </p>\\n    </div>\\n  </div>\\n  <div fxLayoutAlign=\\\"center \\\" class=\\\"mat-caption \\\">{{ current.description }}</div>\\n</div>\\n\";","import { createAction, props, union } from '@ngrx/store'\n\nimport { ICurrentWeather } from '../interfaces'\n\nexport const SearchActions = {\n  search: createAction(\n    '[Search] Search',\n    props<{ searchText: string; country?: string }>()\n  ),\n  weatherLoaded: createAction(\n    '[Search] CurrentWeather loaded',\n    props<{ current: ICurrentWeather }>()\n  ),\n}\n\nconst all = union(SearchActions)\nexport type SearchActions = typeof all\n","import { NgModule } from '@angular/core'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\nimport { MatToolbarModule } from '@angular/material/toolbar'\n\nconst modules = [\n  MatButtonModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSlideToggleModule,\n]\n\n@NgModule({\n  exports: modules,\n})\nexport class AppMaterialModule {}\n","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <mat-toolbar color=\"primary\"> <span>Angular Forecast</span> </mat-toolbar>\n    <br />\n  \n    <div fxLayoutAlign=\"center\">\n      <app-city-search></app-city-search>\n    </div>\n    <div fxLayout=\"row\">\n      <div fxFlex></div>\n      <mat-card fxFlex=\"300px\">\n        <mat-card-header>\n          <mat-card-title><div class=\"mat-headline\">–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞</div></mat-card-title>\n        </mat-card-header>\n        <mat-card-content> <app-current-weather></app-current-weather> </mat-card-content>\n      </mat-card>\n      <div fxFlex></div>\n    </div>\n  `,\n})\nexport class AppComponent {}\n","import { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from '@ngrx/store'\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\n\nimport { environment } from '../environments/environment'\nimport { AppMaterialModule } from './app-material.module'\nimport { AppComponent } from './app.component'\nimport { CitySearchComponent } from './city-search/city-search.component'\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component'\nimport { CurrentWeatherEffects } from './effects/current-weather.effects'\nimport { metaReducers, reducers } from './reducers'\n\n@NgModule({\n  declarations: [AppComponent, CurrentWeatherComponent, CitySearchComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: { strictStateImmutability: true, strictActionImmutability: true },\n    }),\n    EffectsModule.forRoot([CurrentWeatherEffects]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export default \".search-box-partial {\\n  width: 260px;\\n}\\n\\n.search-box-full {\\n  width: 300px;\\n}\\n\\n.clear-button {\\n  display: inline-block;\\n  width: 40px;\\n  color: gray;\\n}\\n\\n.center {\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2l0eS1zZWFyY2gvY2l0eS1zZWFyY2guY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY2l0eS1zZWFyY2gvY2l0eS1zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWFyY2gtYm94LXBhcnRpYWwge1xuICB3aWR0aDogMjYwcHg7XG59XG5cbi5zZWFyY2gtYm94LWZ1bGwge1xuICB3aWR0aDogMzAwcHg7XG59XG5cbi5jbGVhci1idXR0b24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiA0MHB4O1xuICBjb2xvcjogZ3JheTtcbn1cblxuLmNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdfQ== */\";","import { Component } from '@angular/core'\nimport { FormControl, Validators } from '@angular/forms'\nimport { Store } from '@ngrx/store'\nimport { debounceTime, filter, tap } from 'rxjs/operators'\n\nimport { SearchActions } from '../actions/search.actions'\nimport * as fromSearch from '../reducers/search.reducer'\nimport { WeatherService } from '../weather/weather.service'\n\n@Component({\n  selector: 'app-city-search',\n  templateUrl: './city-search.component.html',\n  styleUrls: ['./city-search.component.css'],\n})\nexport class CitySearchComponent {\n  useNgRx = false\n  search = new FormControl('', [Validators.required, Validators.minLength(2)])\n\n  constructor(\n    private weatherService: WeatherService,\n    private store: Store<fromSearch.State>\n  ) {\n    this.search.valueChanges\n      .pipe(\n        debounceTime(1000),\n        filter(() => !this.search.invalid),\n        tap((searchValue: string) => this.doSearch(searchValue))\n      )\n      .subscribe()\n  }\n\n  doSearch(searchValue: string) {\n    const userInput = searchValue.split(',').map((s) => s.trim())\n    const searchText = userInput[0]\n    const country = userInput.length > 1 ? userInput[1] : undefined\n\n    if (this.useNgRx) {\n      this.ngRxBasedSearch(searchText, country)\n    } else {\n      this.behaviorSubjectBasedSearch(searchText, country)\n    }\n  }\n\n  behaviorSubjectBasedSearch(searchText: string, country?: string) {\n    this.weatherService.updateCurrentWeather(searchText, country)\n  }\n\n  ngRxBasedSearch(searchText: string, country?: string) {\n    this.store.dispatch(SearchActions.search({ searchText, country }))\n  }\n}\n","export default \".right {\\n  text-align: right;\\n}\\n\\n.no-margin {\\n  margin-bottom: 0;\\n}\\n\\n.unit {\\n  vertical-align: super;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VycmVudC13ZWF0aGVyL2N1cnJlbnQtd2VhdGhlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY3VycmVudC13ZWF0aGVyL2N1cnJlbnQtd2VhdGhlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5uby1tYXJnaW4ge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4udW5pdCB7XG4gIHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcbn1cbiJdfQ== */\";","import { Component } from '@angular/core'\nimport { Store, select } from '@ngrx/store'\nimport { Observable, merge } from 'rxjs'\n\nimport { ICurrentWeather } from '../interfaces'\nimport * as appStore from '../reducers'\nimport { WeatherService } from '../weather/weather.service'\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.css'],\n})\nexport class CurrentWeatherComponent {\n  current$: Observable<ICurrentWeather>\n\n  constructor(\n    private weatherService: WeatherService,\n    private store: Store<appStore.State>\n  ) {\n    this.current$ = merge(\n      this.store.pipe(select(appStore.selectCurrentWeather)),\n      this.weatherService.currentWeather$\n    )\n  }\n\n  // Attribution: https://stackoverflow.com/a/44418732/178620\n  getOrdinal(date: number) {\n    const n = new Date(date).getDate()\n    return n > 0\n      ? ['th', 'st', 'nd', 'rd'][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10]\n      : ''\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { EMPTY } from 'rxjs'\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\n\nimport { SearchActions } from '../actions/search.actions'\nimport { WeatherService } from '../weather/weather.service'\n\n@Injectable()\nexport class CurrentWeatherEffects {\n  constructor(private actions$: Actions, private weatherService: WeatherService) {}\n\n  getCurrentWeather$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SearchActions.search),\n      exhaustMap((action) => this.doSearch(action))\n    )\n  )\n\n  private doSearch(action: { searchText: string; country?: string }) {\n    return this.weatherService.getCurrentWeather(action.searchText, action.country).pipe(\n      map((weather) => SearchActions.weatherLoaded({ current: weather })),\n      catchError(() => EMPTY)\n    )\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { defaultIfEmpty, flatMap } from 'rxjs/operators'\n\nimport { environment } from '../../environments/environment'\n\nexport interface IPostalCode {\n  countryCode: string\n  postalCode: string\n  placeName: string\n  lng: number\n  lat: number\n}\n\nexport interface IPostalCodeData {\n  postalCodes: [IPostalCode]\n}\n\nexport interface IPostalCodeService {\n  resolvePostalCode(postalCode: string): Observable<IPostalCode>\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostalCodeService implements IPostalCodeService {\n  constructor(private httpClient: HttpClient) {}\n\n  resolvePostalCode(postalCode: string): Observable<IPostalCode> {\n    const uriParams = new HttpParams()\n      .set('maxRows', '1')\n      .set('username', environment.username)\n      .set('postalcode', postalCode)\n\n    return this.httpClient\n      .get<IPostalCodeData>(\n        `${environment.baseUrl}${environment.geonamesApi}.geonames.org/postalCodeSearchJSON`,\n        { params: uriParams }\n      )\n      .pipe(\n        flatMap((data) => data.postalCodes),\n        defaultIfEmpty(null)\n      )\n  }\n}\n","import { ActionReducer, ActionReducerMap, MetaReducer, createSelector } from '@ngrx/store'\n\nimport { environment } from '../../environments/environment'\nimport * as fromSearch from './search.reducer'\n\nexport interface State {\n  search: fromSearch.State\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  search: fromSearch.reducer,\n}\n\nexport const selectCurrentWeather = createSelector(\n  (state: State) => state.search.current,\n  (current) => current\n)\n\nexport function logger(reducer: ActionReducer<State>): ActionReducer<State> {\n  return (state, action) => {\n    const result = reducer(state, action)\n    console.groupCollapsed(action.type)\n    console.log('prev state', state)\n    console.log('action', action)\n    console.log('next state', result)\n    console.groupEnd()\n\n    return result\n  }\n}\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [logger] : []\n","import { Action, createReducer, on } from '@ngrx/store'\n\nimport { SearchActions } from '../actions/search.actions'\nimport { ICurrentWeather } from '../interfaces'\nimport { defaultWeather } from '../weather/weather.service'\n\nexport interface State {\n  current: ICurrentWeather\n}\n\nexport const initialState: State = {\n  current: defaultWeather,\n}\n\nconst searchReducer = createReducer(\n  initialState,\n  on(SearchActions.weatherLoaded, (state, action) => {\n    return {\n      ...state,\n      current: action.current,\n    }\n  })\n)\n\nexport function reducer(state: State | undefined, action: Action) {\n  return searchReducer(state, action)\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { BehaviorSubject, Observable } from 'rxjs'\nimport { map, switchMap } from 'rxjs/operators'\n\nimport { environment } from '../../environments/environment'\nimport { ICurrentWeather } from '../interfaces'\nimport { PostalCodeService } from '../postal-code/postal-code.service'\n\nexport interface ICurrentWeatherData {\n  weather: [\n    {\n      description: string\n      icon: string\n    }\n  ]\n  main: {\n    temp: number\n  }\n  sys: {\n    country: string\n  }\n  dt: number\n  name: string\n}\n\nexport const defaultWeather: ICurrentWeather = {\n  city: '--',\n  country: '--',\n  date: Date.now(),\n  image: '',\n  temperature: 0,\n  description: '',\n}\n\nexport interface IWeatherService {\n  readonly currentWeather$: BehaviorSubject<ICurrentWeather>\n  getCurrentWeather(city: string, country?: string): Observable<ICurrentWeather>\n  getCurrentWeatherByCoords(coords: Coordinates): Observable<ICurrentWeather>\n  updateCurrentWeather(searchText: string, country?: string): void\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService implements IWeatherService {\n  readonly currentWeather$ = new BehaviorSubject<ICurrentWeather>(defaultWeather)\n\n  constructor(\n    private httpClient: HttpClient,\n    private postalCodeService: PostalCodeService\n  ) {}\n\n  getCurrentWeatherByCoords(coords: {\n    latitude: number\n    longitude: number\n  }): Observable<ICurrentWeather> {\n    const uriParams = new HttpParams()\n      .set('lat', coords.latitude.toString())\n      .set('lon', coords.longitude.toString())\n\n    return this.getCurrentWeatherHelper(uriParams)\n  }\n\n  updateCurrentWeather(searchText: string, country?: string): void {\n    this.getCurrentWeather(searchText, country).subscribe((weather) =>\n      this.currentWeather$.next(weather)\n    )\n  }\n\n  getCurrentWeather(searchText: string, country?: string): Observable<ICurrentWeather> {\n    return this.postalCodeService.resolvePostalCode(searchText).pipe(\n      switchMap((postalCode) => {\n        if (postalCode) {\n          return this.getCurrentWeatherByCoords({\n            latitude: postalCode.lat,\n            longitude: postalCode.lng,\n          })\n        } else {\n          const uriParams = new HttpParams().set(\n            'q',\n            country ? `${searchText},${country}` : searchText\n          )\n\n          return this.getCurrentWeatherHelper(uriParams)\n        }\n      })\n    )\n  }\n\n  private getCurrentWeatherHelper(uriParams: HttpParams): Observable<ICurrentWeather> {\n    uriParams = uriParams.set('appid', environment.appId)\n\n    return this.httpClient\n      .get<ICurrentWeatherData>(\n        `${environment.baseUrl}api.openweathermap.org/data/2.5/weather`,\n        { params: uriParams }\n      )\n      .pipe(map((data) => this.transformToICurrentWeather(data)))\n  }\n\n  private transformToICurrentWeather(data: ICurrentWeatherData): ICurrentWeather {\n    return {\n      city: data.name,\n      country: data.sys.country,\n      date: data.dt * 1000,\n      image: `${environment.baseUrl}openweathermap.org/img/w/${data.weather[0].icon}.png`,\n      temperature: this.convertKelvinTo–°(data.main.temp),\n      description: data.weather[0].description,\n    }\n  }\n\n  private convertKelvinTo–°(kelvin: number): number {\n    return (kelvin) - 273.15\n  }\n}\n","export const environment = {\n  production: false,\n  appId: '01ff1417eeb4a81b09ac68b15958d453',\n  username: 'forecast',\n  baseUrl: 'http://',\n  geonamesApi: 'api',\n}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err))\n"]}